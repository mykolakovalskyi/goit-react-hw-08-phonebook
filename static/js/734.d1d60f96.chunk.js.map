{"version":3,"file":"static/js/734.d1d60f96.chunk.js","mappings":"6PACA,EAA8B,iCAA9B,EAA8E,kCCDjEA,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,IAAnB,EAEtBC,EAAgB,SAAAH,GAAK,OAAIA,EAAMC,SAASG,OAAnB,EAErBC,EAAc,SAAAL,GAAK,OAAIA,EAAMC,SAASK,KAAnB,E,6BCGjB,SAASC,IACtB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KAEMC,GAAWC,EAAAA,EAAAA,MACXb,GAAWc,EAAAA,EAAAA,IAAYhB,GAEvBiB,EAAe,SAAAC,GACnB,MAAwBA,EAAEC,OAAlBT,EAAR,EAAQA,KAAMU,EAAd,EAAcA,MAED,SAATV,GACFC,EAAQS,GAEG,WAATV,GACFG,EAAUO,EAEb,EAeKC,EAAQ,WACZV,EAAQ,IACRE,EAAU,GACX,EAED,OACE,kBAAMS,SAnBa,SAAAJ,GACnBA,EAAEK,iBACF,IAAIC,EAAa,CAAEd,KAAAA,EAAME,OAAAA,GACDV,EAASuB,KAAI,SAAAC,GAAO,OAAIA,EAAQhB,IAAZ,IACrBiB,SAASjB,GAG9BkB,EAAAA,GAAAA,MAAA,UAAelB,EAAf,4BAFAI,GAASe,EAAAA,EAAAA,IAAWL,IAKtBH,GACD,EAQ+BS,UAAWC,EAAzC,WACE,kBAAOC,QAAQ,OAAf,mBACA,kBACEC,KAAK,OACLvB,KAAK,OACLwB,GAAG,OACHd,MAAOV,EACPyB,SAAUlB,EACVmB,MAAM,yIACNC,UAAQ,EACRC,YAAY,kBAEd,kBAAON,QAAQ,SAAf,qBACA,kBACEC,KAAK,MACLvB,KAAK,SACLwB,GAAG,SACHd,MAAOR,EACPuB,SAAUlB,EACVmB,MAAM,+FACNC,UAAQ,EACRC,YAAY,eAEd,mBAAQL,KAAK,SAASH,UAAWC,EAAjC,2BAKL,CCtEM,IAEMQ,EAAyB,SAAAtC,GACpC,IAAMC,EAAWF,EAAeC,GAC1BuC,EAJoB,SAAAvC,GAAK,OAAIA,EAAMwC,OAAOC,MAAjB,CAIRC,CAAa1C,GAEpC,MAAuB,KAAnBuC,EACKtC,EAGgBA,EAASuC,QAAO,SAAAf,GAAO,OAC9CA,EAAQhB,KAAKkC,cAAcjB,SAASa,EAAeI,cADL,GAIjD,ECfD,EAA+B,kCCIhB,SAASC,IACtB,IAAM3C,GAAWc,EAAAA,EAAAA,IAAYuB,GAEvBzB,GAAWC,EAAAA,EAAAA,MAEX+B,EAAwB,SAAA5B,GAC5B,IAAM6B,EAAY7B,EAAEC,OAAOe,GAC3BpB,GAASkC,EAAAA,EAAAA,IAAcD,GACxB,EAED,OACE,wBACG7C,EAASuB,KAAI,SAAAC,GACZ,OACE,0BACGA,EAAQhB,KADX,KACmBgB,EAAQd,OAAQ,KACjC,mBACEsB,GAAIR,EAAQQ,GACZe,QAASH,EACThB,UAAWC,EAHb,sBAFOL,EAAQQ,GAWpB,KAGN,C,cChCD,EAAyB,uBAAzB,EAA8D,4BAA9D,EAAwG,4BCGzF,SAASgB,IACtB,IAAMpC,GAAWC,EAAAA,EAAAA,MAOjB,OACE,iBAAKe,UAAWC,EAAhB,WACE,kBAAOC,QAAQ,SAASF,UAAWC,EAAnC,mCAGA,kBACEE,KAAK,OACLvB,KAAK,SACLwB,GAAG,SACHC,SAdmB,SAAAjB,GACvB,IAAIE,EAAQF,EAAEiC,cAAc/B,MAAMwB,cAClC9B,GAASsC,EAAAA,EAAAA,GAAUhC,GACpB,EAYKU,UAAWC,MAIlB,CChBc,SAASsB,IACtB,IAAMvC,GAAWC,EAAAA,EAAAA,MACXV,GAAUW,EAAAA,EAAAA,IAAYZ,GACtBG,GAAQS,EAAAA,EAAAA,IAAYV,GACpBJ,GAAWc,EAAAA,EAAAA,IAAYuB,GAS7B,OAPAe,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAI,mCAAG,8FACLzC,GAAS0C,EAAAA,EAAAA,OADJ,2CAAH,qDAGVD,GACD,GAAE,CAACzC,KAGF,SAAC,KAAD,WACE,iCACE,SAAC,KAAD,WACE,iDAEF,uCACA,SAACN,EAAD,KACA,sCACA,SAAC0C,EAAD,IACC7C,IAAYE,GACX,kDACsB,IAApBL,EAASuD,QAAiBlD,GAG5B,SAACsC,EAAD,KAFA,+EAOT,C","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","redux/filter/selectors.js","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/Phonebook/Phonebook.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"contactForm\":\"ContactForm_contactForm__y0Rca\",\"submitButton\":\"ContactForm_submitButton__8wEUJ\"};","export const selectContacts = state => state.contacts.list;\n\nexport const selectLoading = state => state.contacts.loading;\n\nexport const selectError = state => state.contacts.error;\n","import React, { useState } from 'react';\nimport css from './ContactForm.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\nimport { toast } from 'react-hot-toast';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    if (name === 'name') {\n      setName(value);\n    }\n    if (name === 'number') {\n      setNumber(value);\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    let newContact = { name, number };\n    let nameCheckingArray = contacts.map(contact => contact.name);\n    if (!nameCheckingArray.includes(name)) {\n      dispatch(addContact(newContact));\n    } else {\n      toast.error(`${name} is already in contacts`);\n    }\n\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={css.contactForm}>\n      <label htmlFor=\"name\">Name</label>\n      <input\n        type=\"text\"\n        name=\"name\"\n        id=\"name\"\n        value={name}\n        onChange={handleChange}\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        placeholder=\"Jacob Mercer\"\n      />\n      <label htmlFor=\"number\">Number</label>\n      <input\n        type=\"tel\"\n        name=\"number\"\n        id=\"number\"\n        value={number}\n        onChange={handleChange}\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n        placeholder=\"000-00-00\"\n      />\n      <button type=\"submit\" className={css.submitButton}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n","import { selectContacts } from '../contacts/selectors';\n\nexport const selectFilter = state => state.filter.status;\n\nexport const selectFilteredContacts = state => {\n  const contacts = selectContacts(state);\n  const contactsFilter = selectFilter(state);\n\n  if (contactsFilter === '') {\n    return contacts;\n  }\n\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(contactsFilter.toLowerCase())\n  );\n  return filteredContacts;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"deleteButton\":\"ContactList_deleteButton__3hT3n\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { selectFilteredContacts } from 'redux/filter/selectors';\nimport { deleteContact } from 'redux/contacts/operations';\nimport css from './ContactList.module.css';\n\nexport default function ContactList() {\n  const contacts = useSelector(selectFilteredContacts);\n\n  const dispatch = useDispatch();\n\n  const deleteSelectedContact = e => {\n    const contactId = e.target.id;\n    dispatch(deleteContact(contactId));\n  };\n\n  return (\n    <ul>\n      {contacts.map(contact => {\n        return (\n          <li key={contact.id}>\n            {contact.name}: {contact.number}{' '}\n            <button\n              id={contact.id}\n              onClick={deleteSelectedContact}\n              className={css.deleteButton}\n            >\n              Delete\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"Filter_filter__vxThR\",\"filterInput\":\"Filter_filterInput__1Cysk\",\"filterLabel\":\"Filter_filterLabel__+pnW-\"};","import { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/filter/filterSlice';\nimport css from './Filter.module.css';\n\nexport default function Filter() {\n  const dispatch = useDispatch();\n\n  const setContactFilter = e => {\n    let value = e.currentTarget.value.toLowerCase();\n    dispatch(setFilter(value));\n  };\n\n  return (\n    <div className={css.filter}>\n      <label htmlFor=\"filter\" className={css.filterLabel}>\n        Find contact by name\n      </label>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        id=\"filter\"\n        onChange={setContactFilter}\n        className={css.filterInput}\n      ></input>\n    </div>\n  );\n}\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectError, selectLoading } from 'redux/contacts/selectors';\nimport { selectFilteredContacts } from 'redux/filter/selectors';\n\nexport default function Phonebook() {\n  const dispatch = useDispatch();\n  const loading = useSelector(selectLoading);\n  const error = useSelector(selectError);\n  const contacts = useSelector(selectFilteredContacts);\n\n  useEffect(() => {\n    const func = async () => {\n      await dispatch(fetchContacts());\n    };\n    func();\n  }, [dispatch]);\n\n  return (\n    <HelmetProvider>\n      <>\n        <Helmet>\n          <title>Your Phonebook</title>\n        </Helmet>\n        <h2>Phonebook</h2>\n        <ContactForm />\n        <h3>Contacts</h3>\n        <Filter />\n        {loading && !error ? (\n          <b>Request in progress...</b>\n        ) : contacts.length === 0 && !error ? (\n          <p>The Phonebook is empty. Add your first contact.</p>\n        ) : (\n          <ContactList />\n        )}\n      </>\n    </HelmetProvider>\n  );\n}\n"],"names":["selectContacts","state","contacts","list","selectLoading","loading","selectError","error","ContactForm","useState","name","setName","number","setNumber","dispatch","useDispatch","useSelector","handleChange","e","target","value","reset","onSubmit","preventDefault","newContact","map","contact","includes","toast","addContact","className","css","htmlFor","type","id","onChange","title","required","placeholder","selectFilteredContacts","contactsFilter","filter","status","selectFilter","toLowerCase","ContactList","deleteSelectedContact","contactId","deleteContact","onClick","Filter","currentTarget","setFilter","Phonebook","useEffect","func","fetchContacts","length"],"sourceRoot":""}