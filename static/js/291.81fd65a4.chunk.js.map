{"version":3,"file":"static/js/291.81fd65a4.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","redux/filter/selectors.js","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/pages/Phonebook/Phonebook.module.css?1c37","pages/Phonebook/Phonebook.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"ContactForm_wrapper__-Umw-\"};","export const selectContacts = state => state.contacts.list;\n\nexport const selectLoading = state => state.contacts.loading;\n\nexport const selectError = state => state.contacts.error;\n","import React, { useRef } from 'react';\nimport css from './ContactForm.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\nimport { toast } from 'react-hot-toast';\nimport { Box, Stack, TextField, Button } from '@mui/material';\n\nexport default function ContactForm() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const nameInputRef = useRef(null);\n  const numberInputRef = useRef(null);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const name = nameInputRef.current.value;\n    const number = numberInputRef.current.value;\n    const newContact = { name, number };\n    let nameCheckingArray = contacts.map(contact => contact.name);\n    if (!nameCheckingArray.includes(name)) {\n      dispatch(addContact(newContact));\n    } else {\n      toast.error(`${name} is already in contacts`);\n    }\n\n    nameInputRef.current.value = '';\n    numberInputRef.current.value = '';\n  };\n\n  return (\n    <div className={css.wrapper}>\n      <Box onSubmit={handleSubmit} component=\"form\" autoComplete=\"off\">\n        <Stack direction={'column'} spacing={3}>\n          <TextField\n            fullWidth\n            required\n            id=\"standard-basic\"\n            label=\"Name\"\n            variant=\"standard\"\n            type=\"text\"\n            name=\"name\"\n            color=\"primary\"\n            inputRef={nameInputRef}\n          />\n          <TextField\n            fullWidth\n            required\n            id=\"standard-basic\"\n            label=\"Number\"\n            variant=\"standard\"\n            type=\"tel\"\n            name=\"number\"\n            color=\"primary\"\n            inputRef={numberInputRef}\n          />\n\n          <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n            Add contact\n          </Button>\n        </Stack>\n      </Box>\n    </div>\n  );\n}\n","import { selectContacts } from '../contacts/selectors';\n\nexport const selectFilter = state => state.filter.status;\n\nexport const selectFilteredContacts = state => {\n  const contacts = selectContacts(state);\n  const contactsFilter = selectFilter(state);\n\n  if (contactsFilter === '') {\n    return contacts;\n  }\n\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(contactsFilter.toLowerCase())\n  );\n  return filteredContacts;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"ContactList_wrapper__VP-XU\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { selectFilteredContacts } from 'redux/filter/selectors';\nimport { deleteContact } from 'redux/contacts/operations';\nimport css from './ContactList.module.css';\nimport { Button } from '@mui/material';\n\nexport default function ContactList() {\n  const contacts = useSelector(selectFilteredContacts);\n\n  const dispatch = useDispatch();\n\n  const deleteSelectedContact = e => {\n    const contactId = e.target.id;\n    dispatch(deleteContact(contactId));\n  };\n\n  return (\n    <ul className={css.wrapper}>\n      {contacts.map(contact => {\n        return (\n          <li key={contact.id}>\n            {contact.name}: {contact.number}{' '}\n            <Button\n              size=\"small\"\n              id={contact.id}\n              variant=\"contained\"\n              color=\"primary\"\n              type=\"button\"\n              onClick={deleteSelectedContact}\n            >\n              Delete\n            </Button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"Filter_filter__vxThR\"};","import { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/filter/filterSlice';\nimport css from './Filter.module.css';\nimport { TextField } from '@mui/material';\n\nexport default function Filter() {\n  const dispatch = useDispatch();\n\n  const setContactFilter = e => {\n    let value = e.currentTarget.value.toLowerCase();\n    dispatch(setFilter(value));\n  };\n\n  return (\n    <div className={css.filter}>\n      <TextField\n        onChange={setContactFilter}\n        fullWidth\n        id=\"input-with-icon-textfield\"\n        placeholder=\"Search by name\"\n        type=\"text\"\n        variant=\"standard\"\n        name=\"filter\"\n        color=\"primary\"\n      />\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Phonebook_title__8U+0x\",\"message\":\"Phonebook_message__uqtJH\"};","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectError, selectLoading } from 'redux/contacts/selectors';\nimport { selectFilteredContacts } from 'redux/filter/selectors';\nimport css from './Phonebook.module.css';\n\nexport default function Phonebook() {\n  const dispatch = useDispatch();\n  const loading = useSelector(selectLoading);\n  const error = useSelector(selectError);\n  const contacts = useSelector(selectFilteredContacts);\n\n  useEffect(() => {\n    const func = async () => {\n      await dispatch(fetchContacts());\n    };\n    func();\n  }, [dispatch]);\n\n  return (\n    <HelmetProvider>\n      <>\n        <Helmet>\n          <title>Your Phonebook</title>\n        </Helmet>\n        <h2 className={css.title}>Phonebook</h2>\n        <ContactForm />\n        <h2 className={css.title}>Contacts</h2>\n        <Filter />\n        {loading && !error ? (\n          <b className={css.message}>Request in progress...</b>\n        ) : contacts.length === 0 && !error ? (\n          <p className={css.message}>\n            The Phonebook is empty. Add your first contact.\n          </p>\n        ) : (\n          <ContactList />\n        )}\n      </>\n    </HelmetProvider>\n  );\n}\n"],"names":["selectContacts","state","contacts","list","selectLoading","loading","selectError","error","ContactForm","dispatch","useDispatch","useSelector","nameInputRef","useRef","numberInputRef","className","css","Box","onSubmit","e","preventDefault","name","current","value","newContact","number","map","contact","includes","toast","addContact","component","autoComplete","Stack","direction","spacing","TextField","fullWidth","required","id","label","variant","type","color","inputRef","Button","selectFilteredContacts","contactsFilter","filter","status","selectFilter","toLowerCase","ContactList","deleteSelectedContact","contactId","target","deleteContact","size","onClick","Filter","onChange","currentTarget","setFilter","placeholder","Phonebook","useEffect","func","fetchContacts","length"],"sourceRoot":""}